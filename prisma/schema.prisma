generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  buyer
  seller
}

enum AuctionStatus {
  pending
  accepted
  rejected
}

model User {
  id       String    @id @default(uuid())
  name     String
  email    String    @unique
  password String
  role     UserRole  @default(buyer)
  auctions Auction[]
  bids     Bid[]

  @@map("users")
}

model Auction {
  id            String   @id @default(uuid())
  bookName      String   @map("book_name")
  bookImageUrl  String   @map("book_image_url")
  slug          String   @unique
  description   String
  bookGenre     String   @map("book_genre")
  authorId      String   @map("author_id")
  createdAt     DateTime @default(now()) @map("created_at")
  acceptedBidId String?  @unique @map("accepted_bid_id")

  author      User  @relation(fields: [authorId], references: [id])
  acceptedBid Bid?  @relation("acceptedBid", fields: [acceptedBidId], references: [id])
  bids        Bid[]

  @@map("auctions")
}

model Bid {
  id        String        @id @default(uuid())
  amount    Int
  bidderId  String        @map("bidder_id")
  auctionId String        @map("book_id")
  createdAt DateTime      @default(now()) @map("created_at")
  status    AuctionStatus @default(pending)

  acceptedOn Auction? @relation("acceptedBid")
  auction    Auction  @relation(fields: [auctionId], references: [id])
  bidder     User     @relation(fields: [bidderId], references: [id])

  @@map("bids")
}
